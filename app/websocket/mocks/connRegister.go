// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	websocket "github.com/gorilla/websocket"
	mock "github.com/stretchr/testify/mock"
)

// connRegister is an autogenerated mock type for the connRegister type
type connRegister struct {
	mock.Mock
}

// RegisterWSConnection provides a mock function with given fields: w, r
func (_m *connRegister) RegisterWSConnection(w http.ResponseWriter, r *http.Request) *websocket.Conn {
	ret := _m.Called(w, r)

	var r0 *websocket.Conn
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) *websocket.Conn); ok {
		r0 = rf(w, r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*websocket.Conn)
		}
	}

	return r0
}

type mockConstructorTestingTnewConnRegister interface {
	mock.TestingT
	Cleanup(func())
}

// newConnRegister creates a new instance of connRegister. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newConnRegister(t mockConstructorTestingTnewConnRegister) *connRegister {
	mock := &connRegister{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
